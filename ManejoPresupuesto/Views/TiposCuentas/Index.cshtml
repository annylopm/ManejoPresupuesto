@model IEnumerable<TipoCuenta>
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>Tipos de cuentas</h1>
<h5>El tipo de cuenta se refiere a cómo podemos agrupar cuentas.
    Ejemplos: Préstamos, tarjetas de crédito, etc.
</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear Nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Accionnes</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach(var tipoCuenta in Model){
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

        const urlOrdenar = '@Url.Action("ordenar")'; //generar la url donde se encuentra ordenar

        $(function(){
            $("#reordenable").sortable({//permite acomodar los elementos
                stop: async function(e, ui){ //cuando se deje de mover llamar a la funcion
                    await actualizarOrdenes();
                }
            }); 

            async function actualizarOrdenes(){
                const ids = obtenerIdsDeElementos(); //crear el arreglo de los ids
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos(){
                //map() crea un arreglo sobre cada uno de los ids
                const ids = $(".ids").map(function(){ //hacer referencia a la clase de ids en html, para poder almacenarlos
                    return $(this).val(); //iteramos sobre el valor de cada elemento (this)
                }).get(); //convertir en arreglo los valores

                return ids; //retornar los arreglos de los ids
            }

            async function enviarIdsAlBackend(ids){
                var data = JSON.stringify(ids); //stringify es p/convertir de JS a JSON

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
            }
        })
    </script>
}
